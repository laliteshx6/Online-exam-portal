{"ast":null,"code":"var _jsxFileName = \"D:\\\\Quiz\\\\user\\\\src\\\\redux\\\\actions\\\\takeTestAction.js\";\nimport axios from \"axios\";\nimport apis from \"../../helper/Apis\";\nimport Auth from \"../../helper/Auth\";\nimport { ActionTypes } from \"../action-types\";\nimport { Navigate } from \"react-router-dom\";\nimport store from \"../store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const startTestAction = (details, test) => {\n  return async dispatch => {\n    const response = await axios.post(apis.BASE + apis.START_TEST, details, {\n      headers: {\n        'Authorization': `Bearer ${Auth.retriveToken()}`\n      }\n    }).catch(err => {\n      console.log(err);\n      return;\n    });\n\n    if (response.data.success) {\n      console.log(response.data);\n      var addStartTime = response.data.answersheet.startTime === undefined;\n      const queResponse = await axios.post(apis.BASE + apis.GET_QUESTIONS_TAKETEST, {\n        answersheetid: response.data.answersheet._id,\n        addStartTime: addStartTime,\n        questionid: response.data.questions\n      }, {\n        headers: {\n          'Authorization': `Bearer ${Auth.retriveToken()}`\n        }\n      }).catch(err => {\n        console.log(err);\n        return;\n      });\n\n      if (queResponse.data.success) {\n        if (response.data.answersheet.answers.length > 0) {\n          dispatch({\n            type: ActionTypes.START_TEST,\n            payload: {\n              test: test,\n              answersheet: { ...response.data.answersheet,\n                startTime: queResponse.data.startTime\n              },\n              questions: queResponse.data.questions\n            }\n          });\n        } else {\n          var emptyAns = new Array(response.data.questions.length).fill(null);\n          dispatch({\n            type: ActionTypes.START_TEST,\n            payload: {\n              test: test,\n              answersheet: { ...response.data.answersheet,\n                startTime: queResponse.data.startTime,\n                answers: emptyAns\n              },\n              questions: queResponse.data.questions\n            }\n          });\n        }\n      } else {\n        dispatch({\n          type: ActionTypes.SET_ALERT,\n          payload: {\n            isAlert: true,\n            title: \"Start Test Error\",\n            type: \"error\",\n            message: queResponse.data.message\n          }\n        });\n      }\n    } else {\n      dispatch({\n        type: ActionTypes.SET_ALERT,\n        payload: {\n          isAlert: true,\n          title: \"Start Test Error\",\n          type: \"error\",\n          message: response.data.message\n        }\n      });\n    }\n  };\n};\nexport const selectedOptionAction = details => {\n  return async dispatch => {\n    dispatch({\n      type: ActionTypes.SELECT_ANSWER,\n      payload: details\n    });\n  };\n};\nexport const saveAnswerAction = () => {\n  return async dispatch => {\n    console.log(store.getState());\n    var answersheet = store.getState().takeTestDetails.answersheet;\n    console.log(answersheet.answers);\n    axios.post(apis.BASE + apis.SAVE_ANSWER, {\n      answersheetid: answersheet._id,\n      answers: answersheet.answers\n    }, {\n      headers: {\n        'Authorization': `Bearer ${Auth.retriveToken()}`\n      }\n    }).then(response => {\n      console.log(response);\n\n      if (response.data.success) {\n        if (response.data.testDone) {\n          dispatch({\n            type: ActionTypes.END_TEST\n          });\n        }\n\n        console.log(\"saved answer\");\n      } else {\n        console.log(response.data);\n      }\n    }).catch(err => {\n      console.log(err);\n      return;\n    });\n  };\n};\nexport const endTestAction = () => {\n  return async dispatch => {\n    console.log(store.getState());\n    var answersheet = store.getState().takeTestDetails.answersheet;\n    console.log(answersheet.answers);\n    axios.post(apis.BASE + apis.END_TEST, {\n      answersheetid: answersheet._id,\n      answers: answersheet.answers\n    }, {\n      headers: {\n        'Authorization': `Bearer ${Auth.retriveToken()}`\n      }\n    }).then(response => {\n      console.log(response);\n\n      if (response.data.success) {\n        dispatch({\n          type: ActionTypes.END_TEST\n        });\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this);\n      }\n    }).catch(err => {\n      console.log(err);\n      return;\n    });\n  };\n};","map":{"version":3,"names":["axios","apis","Auth","ActionTypes","Navigate","store","startTestAction","details","test","dispatch","response","post","BASE","START_TEST","headers","retriveToken","catch","err","console","log","data","success","addStartTime","answersheet","startTime","undefined","queResponse","GET_QUESTIONS_TAKETEST","answersheetid","_id","questionid","questions","answers","length","type","payload","emptyAns","Array","fill","SET_ALERT","isAlert","title","message","selectedOptionAction","SELECT_ANSWER","saveAnswerAction","getState","takeTestDetails","SAVE_ANSWER","then","testDone","END_TEST","endTestAction"],"sources":["D:/Quiz/user/src/redux/actions/takeTestAction.js"],"sourcesContent":["import axios from \"axios\"\nimport apis from \"../../helper/Apis\"\nimport Auth from \"../../helper/Auth\"\nimport { ActionTypes } from \"../action-types\"\nimport { Navigate } from \"react-router-dom\";\nimport store from \"../store\";\n\nexport const startTestAction = (details, test) => {\n  \n  return async(dispatch)=> {\n    const response = await axios.post(apis.BASE + apis.START_TEST, details, {\n      headers : {\n        'Authorization' : `Bearer ${Auth.retriveToken()}`\n      }\n    }).catch(err => {\n      console.log(err);\n      return;\n    })\n    if(response.data.success) {\n      console.log(response.data);\n      var addStartTime = (response.data.answersheet.startTime === undefined)\n      const queResponse = await axios.post(apis.BASE + apis.GET_QUESTIONS_TAKETEST,\n        {\n          answersheetid:response.data.answersheet._id,\n          addStartTime:addStartTime,\n          questionid:response.data.questions\n        }, {\n        headers : {\n          'Authorization' : `Bearer ${Auth.retriveToken()}`\n        }\n      }).catch(err => {\n        console.log(err);\n        return;\n      })\n      if(queResponse.data.success) {\n        if(response.data.answersheet.answers.length > 0) {\n          dispatch({\n            type: ActionTypes.START_TEST,\n            payload : {\n              test : test,\n              answersheet : {...response.data.answersheet,startTime:queResponse.data.startTime},\n              questions : queResponse.data.questions\n            }\n          })\n        }\n        else {\n          var emptyAns = new Array(response.data.questions.length).fill(null);\n          dispatch({\n            type: ActionTypes.START_TEST,\n            payload : {\n              test : test,\n              answersheet : {...response.data.answersheet,startTime:queResponse.data.startTime, answers:emptyAns},\n              questions : queResponse.data.questions\n            }\n          })\n        }\n      } else {\n        dispatch({\n          type:ActionTypes.SET_ALERT,\n          payload : {\n            isAlert : true,\n            title : \"Start Test Error\",\n            type : \"error\",\n            message : queResponse.data.message\n          }\n        })\n      }\n    } \n    else {\n      dispatch({\n        type:ActionTypes.SET_ALERT,\n        payload : {\n          isAlert : true,\n          title : \"Start Test Error\",\n          type : \"error\",\n          message : response.data.message\n        }\n      })\n    }\n  }\n}\n\nexport const selectedOptionAction = (details) => {\n  return async(dispatch)=>{\n    dispatch({\n      type:ActionTypes.SELECT_ANSWER,\n      payload : details\n    })\n  }\n}\n\nexport const saveAnswerAction = () => {\n  return async(dispatch)=> {\n    console.log(store.getState());\n    var answersheet =  store.getState().takeTestDetails.answersheet;\n    console.log(answersheet.answers);\n    axios.post(apis.BASE + apis.SAVE_ANSWER,{answersheetid:answersheet._id,answers: answersheet.answers},{\n      headers : {\n        'Authorization' : `Bearer ${Auth.retriveToken()}`\n      }\n    }).then(response=> {\n      console.log(response);\n      if(response.data.success) {\n        if(response.data.testDone) {\n          dispatch({\n            type : ActionTypes.END_TEST\n          })\n        }\n        console.log(\"saved answer\");\n      } else {\n        console.log(response.data);\n      }\n    }).catch(err => {\n      console.log(err);\n      return;\n    })\n  }\n}\n\nexport const endTestAction = () => {\n  return async(dispatch)=> {\n    console.log(store.getState());\n    var answersheet =  store.getState().takeTestDetails.answersheet;\n    console.log(answersheet.answers);\n    axios.post(apis.BASE + apis.END_TEST,{answersheetid:answersheet._id,answers: answersheet.answers},{\n      headers : {\n        'Authorization' : `Bearer ${Auth.retriveToken()}`\n      }\n    }).then(response=> {\n      console.log(response);\n      if(response.data.success) {\n        dispatch({\n          type : ActionTypes.END_TEST\n        })\n        return (<Navigate to='/'/>)\n      }\n    }).catch(err => {\n      console.log(err);\n      return;\n    })\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}