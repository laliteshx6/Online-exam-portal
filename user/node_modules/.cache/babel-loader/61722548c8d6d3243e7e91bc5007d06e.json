{"ast":null,"code":"import { ActionTypes } from \"../action-types\";\nconst initialState = {\n  list: [],\n  searched: false,\n  question: {}\n};\nexport const getQuestionReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case ActionTypes.SEARCH_QUESTION:\n      return { ...state,\n        list: payload.questionList,\n        searched: true,\n        answer: -1,\n        question: {}\n      };\n\n    case ActionTypes.CHANGE_QUESTION_STATUS:\n      var newlist = state.list.map(q => q._id === payload.id ? {\n        _id: payload.id,\n        status: payload.status,\n        body: q.body\n      } : q);\n      return { ...state,\n        list: newlist,\n        searched: true\n      };\n\n    case ActionTypes.VIEW_QUESTION:\n      return { ...state,\n        question: payload,\n        searched: false\n      };\n\n    case ActionTypes.GET_BACK_TO_SEARCH:\n      return { ...state,\n        searched: true\n      };\n\n    case ActionTypes.LOGOUT:\n      return initialState;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ActionTypes","initialState","list","searched","question","getQuestionReducer","state","type","payload","SEARCH_QUESTION","questionList","answer","CHANGE_QUESTION_STATUS","newlist","map","q","_id","id","status","body","VIEW_QUESTION","GET_BACK_TO_SEARCH","LOGOUT"],"sources":["D:/mern/Online-Exam-Portal/user/src/redux/reducers/question.js"],"sourcesContent":["import { ActionTypes } from \"../action-types\";\n\n\nconst initialState = {\n  list : [],\n  searched : false,\n  question : {}\n}\n\n\nexport const getQuestionReducer = (state=initialState, {type,payload})=> {\n  switch(type) {\n    case ActionTypes.SEARCH_QUESTION:\n      return {\n        ...state,\n        list : payload.questionList,\n        searched : true,\n        answer : -1,\n        question : {}\n      };\n    case ActionTypes.CHANGE_QUESTION_STATUS:\n      var newlist = state.list.map((q)=>( q._id===payload.id ? \n        { \n          _id:payload.id, \n          status:payload.status, \n          body:q.body\n        } :q ));\n      return {\n        ...state,\n        list : newlist,\n        searched : true\n      }\n    case ActionTypes.VIEW_QUESTION:\n      return {\n        ...state,\n        question : payload,\n        searched : false\n      }\n    case ActionTypes.GET_BACK_TO_SEARCH:\n      return {\n        ...state,\n        searched : true\n      }\n    case ActionTypes.LOGOUT:\n        return initialState;\n    default:\n      return state;\n  }\n}"],"mappings":"AAAA,SAASA,WAAT,QAA4B,iBAA5B;AAGA,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAG,EADY;EAEnBC,QAAQ,EAAG,KAFQ;EAGnBC,QAAQ,EAAG;AAHQ,CAArB;AAOA,OAAO,MAAMC,kBAAkB,GAAG,YAAuC;EAAA,IAAtCC,KAAsC,uEAAhCL,YAAgC;EAAA,IAAlB;IAACM,IAAD;IAAMC;EAAN,CAAkB;;EACvE,QAAOD,IAAP;IACE,KAAKP,WAAW,CAACS,eAAjB;MACE,OAAO,EACL,GAAGH,KADE;QAELJ,IAAI,EAAGM,OAAO,CAACE,YAFV;QAGLP,QAAQ,EAAG,IAHN;QAILQ,MAAM,EAAG,CAAC,CAJL;QAKLP,QAAQ,EAAG;MALN,CAAP;;IAOF,KAAKJ,WAAW,CAACY,sBAAjB;MACE,IAAIC,OAAO,GAAGP,KAAK,CAACJ,IAAN,CAAWY,GAAX,CAAgBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAQR,OAAO,CAACS,EAAhB,GAClC;QACED,GAAG,EAACR,OAAO,CAACS,EADd;QAEEC,MAAM,EAACV,OAAO,CAACU,MAFjB;QAGEC,IAAI,EAACJ,CAAC,CAACI;MAHT,CADkC,GAK/BJ,CALS,CAAd;MAMA,OAAO,EACL,GAAGT,KADE;QAELJ,IAAI,EAAGW,OAFF;QAGLV,QAAQ,EAAG;MAHN,CAAP;;IAKF,KAAKH,WAAW,CAACoB,aAAjB;MACE,OAAO,EACL,GAAGd,KADE;QAELF,QAAQ,EAAGI,OAFN;QAGLL,QAAQ,EAAG;MAHN,CAAP;;IAKF,KAAKH,WAAW,CAACqB,kBAAjB;MACE,OAAO,EACL,GAAGf,KADE;QAELH,QAAQ,EAAG;MAFN,CAAP;;IAIF,KAAKH,WAAW,CAACsB,MAAjB;MACI,OAAOrB,YAAP;;IACJ;MACE,OAAOK,KAAP;EAnCJ;AAqCD,CAtCM"},"metadata":{},"sourceType":"module"}