{"ast":null,"code":"import axios from \"axios\";\nimport apis from \"../../helper/Apis\";\nimport { ActionTypes } from \"../action-types\";\nimport Auth from \"../../helper/Auth\";\nexport const addQuestionAction = details => {\n  return async dispatch => {\n    const response = await axios.post(apis.BASE + apis.ADD_QUESTION, details, {\n      headers: {\n        'Authorization': `Bearer ${Auth.retriveToken()}`\n      }\n    });\n\n    if (response.data.success) {\n      dispatch({\n        type: ActionTypes.SET_ALERT,\n        payload: {\n          isAlert: true,\n          title: \"Success\",\n          type: \"success\",\n          message: response.data.message\n        }\n      });\n    } else {\n      dispatch({\n        type: ActionTypes.SET_ALERT,\n        payload: {\n          isAlert: true,\n          title: \"Submit Error\",\n          type: \"error\",\n          message: response.data.message\n        }\n      });\n    }\n  };\n};\nexport const searchQuestion = details => {\n  return async dispatch => {\n    axios.post(apis.BASE + apis.SEARCH_QUESTION, details, {\n      headers: {\n        'Authorization': `Bearer ${Auth.retriveToken()}`\n      }\n    }).then(response => {\n      if (response.data.success) {\n        dispatch({\n          type: ActionTypes.SEARCH_QUESTION,\n          payload: {\n            questionList: response.data.list\n          }\n        });\n      }\n    });\n  };\n};\nexport const changeQuestionStatus = details => {\n  return async dispatch => {\n    axios.post(apis.BASE + apis.CHANGE_QUESTION_STATUS, details, {\n      headers: {\n        'Authorization': `Bearer ${Auth.retriveToken()}`\n      }\n    }).then(response => {\n      if (response.data.success) {\n        dispatch({\n          type: ActionTypes.CHANGE_QUESTION_STATUS,\n          payload: {\n            id: details.id,\n            status: details.status\n          }\n        });\n      } else {\n        console.error(response.data);\n        dispatch({\n          type: ActionTypes.SET_ALERT,\n          payload: {\n            isAlert: true,\n            type: 'error',\n            title: 'error in change status',\n            message: response.data.message\n          }\n        });\n      }\n    });\n  };\n};\nexport const searchQuestionById = id => {\n  return async dispatch => {\n    axios.post(apis.BASE + apis.GET_QUESTION_BY_ID, {\n      id\n    }, {\n      headers: {\n        'Authorization': `Bearer ${Auth.retriveToken()}`\n      }\n    }).then(response => {\n      if (response.data.success) {\n        var q = response.data.question;\n        var a = response.data.answer;\n        dispatch({\n          type: ActionTypes.VIEW_QUESTION,\n          payload: {\n            _id: q._id,\n            body: q.body,\n            explanation: q.explanation,\n            status: q.status,\n            subject: q.subject,\n            marks: q.marks,\n            options: q.options,\n            answer: a\n          }\n        });\n      } else {\n        console.error(response.data);\n        dispatch({\n          type: ActionTypes.SET_ALERT,\n          payload: {\n            isAlert: true,\n            type: 'error',\n            title: 'error in view question',\n            message: response.data.message\n          }\n        });\n      }\n    });\n  };\n};\nexport const getAnswerByQuestionId = (id, options) => {\n  return async dispatch => {\n    axios.post(apis.BASE + apis.GET_ANSWER, {\n      id\n    }, {\n      headers: {\n        'Authorization': `Bearer ${Auth.retriveToken()}`\n      }\n    }).then(response => {\n      console.log(response);\n      console.log(options);\n\n      if (response.data.success) {\n        var ans = response.data.queans.answer;\n\n        for (let i = 0; i < options.length; i++) {\n          if (options[i] === ans) {\n            dispatch({\n              type: ActionTypes.GET_ANSWER,\n              payload: i\n            });\n            break;\n          }\n        }\n      } else {\n        dispatch({\n          type: ActionTypes.GET_ANSWER,\n          payload: -2\n        });\n      }\n    });\n  };\n};\nexport const goBacktoSearch = () => {\n  return async dispatch => {\n    dispatch({\n      type: ActionTypes.GET_BACK_TO_SEARCH,\n      payload: ''\n    });\n  };\n};\nexport const updateQuestionAction = details => {\n  return async dispatch => {\n    const response = await axios.post(apis.BASE + apis.UPDATE_QUESTION, details, {\n      headers: {\n        'Authorization': `Bearer ${Auth.retriveToken()}`\n      }\n    });\n\n    if (response.data.success) {\n      dispatch({\n        type: ActionTypes.SET_ALERT,\n        payload: {\n          isAlert: true,\n          title: \"Success\",\n          type: \"success\",\n          message: response.data.message\n        }\n      });\n    } else {\n      dispatch({\n        type: ActionTypes.SET_ALERT,\n        payload: {\n          isAlert: true,\n          title: \"Submit Error\",\n          type: \"error\",\n          message: response.data.message\n        }\n      });\n    }\n  };\n};","map":{"version":3,"names":["axios","apis","ActionTypes","Auth","addQuestionAction","details","dispatch","response","post","BASE","ADD_QUESTION","headers","retriveToken","data","success","type","SET_ALERT","payload","isAlert","title","message","searchQuestion","SEARCH_QUESTION","then","questionList","list","changeQuestionStatus","CHANGE_QUESTION_STATUS","id","status","console","error","searchQuestionById","GET_QUESTION_BY_ID","q","question","a","answer","VIEW_QUESTION","_id","body","explanation","subject","marks","options","getAnswerByQuestionId","GET_ANSWER","log","ans","queans","i","length","goBacktoSearch","GET_BACK_TO_SEARCH","updateQuestionAction","UPDATE_QUESTION"],"sources":["D:/Quiz/user/src/redux/actions/questionAction.js"],"sourcesContent":["import axios from \"axios\"\nimport apis from \"../../helper/Apis\"\nimport { ActionTypes } from \"../action-types\";\nimport Auth from \"../../helper/Auth\"\n\nexport const addQuestionAction = (details) => {\n  return async(dispatch)=> {\n    const response = await axios.post(apis.BASE + apis.ADD_QUESTION,details,{\n      headers:{\n        'Authorization':`Bearer ${Auth.retriveToken()}`\n      }\n    });\n    if(response.data.success) {\n      dispatch({\n        type:ActionTypes.SET_ALERT,\n        payload : {\n          isAlert : true,\n          title : \"Success\",\n          type : \"success\",\n          message : response.data.message\n        }\n      })\n    }\n    else {\n      dispatch({\n        type:ActionTypes.SET_ALERT,\n        payload : {\n          isAlert : true,\n          title : \"Submit Error\",\n          type : \"error\",\n          message : response.data.message\n        }\n      })\n    }\n  }\n}\n\nexport const searchQuestion = (details) => {\n  return async(dispatch)=>{\n    axios.post(apis.BASE + apis.SEARCH_QUESTION,details,{\n      headers : {\n        'Authorization':`Bearer ${Auth.retriveToken()}`\n      }\n    }).then(response=>{\n      if(response.data.success) {\n        dispatch({\n          type:ActionTypes.SEARCH_QUESTION,\n          payload : {\n            questionList : response.data.list\n          }\n        })\n      }\n    })\n  }\n}\n\nexport const changeQuestionStatus = (details) => {\n  return async(dispatch)=> {\n    axios.post(apis.BASE + apis.CHANGE_QUESTION_STATUS, details, {\n      headers : {\n        'Authorization':`Bearer ${Auth.retriveToken()}`\n      }\n    }).then(response => {\n      if(response.data.success) {\n        dispatch({\n          type:ActionTypes.CHANGE_QUESTION_STATUS,\n          payload : {\n            id : details.id,\n            status : details.status\n          }\n        })\n      }\n      else {\n        console.error(response.data);\n        dispatch({\n          type:ActionTypes.SET_ALERT,\n          payload : {\n            isAlert:true,\n            type : 'error',\n            title : 'error in change status',\n            message : response.data.message\n          }\n        })\n      }\n    })\n  }\n}\n\n\nexport const searchQuestionById = (id) => {\n  return async(dispatch)=>{\n    axios.post(apis.BASE + apis.GET_QUESTION_BY_ID,{id},{\n      headers : {\n        'Authorization':`Bearer ${Auth.retriveToken()}`\n      }\n    }).then(response=>{\n      if(response.data.success) {\n        var q = response.data.question\n        var a = response.data.answer\n        dispatch({\n          type:ActionTypes.VIEW_QUESTION,\n          payload : {\n            _id : q._id,\n            body : q.body,\n            explanation : q.explanation,\n            status : q.status,\n            subject : q.subject,\n            marks : q.marks,\n            options : q.options,\n            answer : a,\n          }\n        })\n      } else {\n        console.error(response.data);\n        dispatch({\n          type:ActionTypes.SET_ALERT,\n          payload : {\n            isAlert:true,\n            type : 'error',\n            title : 'error in view question',\n            message : response.data.message\n          }\n        })\n      }\n    })\n  }\n}\n\nexport const getAnswerByQuestionId = (id,options) => {\n  return async(dispatch)=>{\n    axios.post(apis.BASE + apis.GET_ANSWER,{id},{\n      headers : {\n        'Authorization':`Bearer ${Auth.retriveToken()}`\n      }\n    }).then(response=>{\n      console.log(response);\n      console.log(options);\n      if(response.data.success) {\n        var ans = response.data.queans.answer;\n        for(let i = 0; i<options.length;i++) {\n          if(options[i]=== ans) {\n            dispatch({\n              type:ActionTypes.GET_ANSWER,\n              payload : i\n            })\n            break;\n          }\n        }\n      }\n      else {\n        dispatch({\n          type:ActionTypes.GET_ANSWER,\n          payload : -2\n        })\n      }\n    })\n  }\n}\n\nexport const goBacktoSearch = () => {\n  return async (dispatch)=>{\n    dispatch({\n      type:ActionTypes.GET_BACK_TO_SEARCH,\n      payload : ''\n    })\n  }\n}\n\nexport const updateQuestionAction = (details) => {\n  return async(dispatch)=> {\n    const response = await axios.post(apis.BASE + apis.UPDATE_QUESTION,details,{\n      headers:{\n        'Authorization':`Bearer ${Auth.retriveToken()}`\n      }\n    });\n    if(response.data.success) {\n      dispatch({\n        type:ActionTypes.SET_ALERT,\n        payload : {\n          isAlert : true,\n          title : \"Success\",\n          type : \"success\",\n          message : response.data.message\n        }\n      })\n    }\n    else {\n      dispatch({\n        type:ActionTypes.SET_ALERT,\n        payload : {\n          isAlert : true,\n          title : \"Submit Error\",\n          type : \"error\",\n          message : response.data.message\n        }\n      })\n    }\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}