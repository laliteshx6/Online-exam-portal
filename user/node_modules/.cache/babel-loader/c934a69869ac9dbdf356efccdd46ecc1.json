{"ast":null,"code":"import axios from \"axios\";\nimport apis from \"../../helper/Apis\";\nimport { ActionTypes } from \"../action-types\";\nimport Auth from \"../../helper/Auth\";\nexport const createTestAction = details => {\n  return async dispatch => {\n    const response = await axios.post(apis.BASE + apis.CREATE_QUESTION, details, {\n      headers: {\n        'Authorization': `Bearer ${Auth.retriveToken()}`\n      }\n    });\n\n    if (response.data.success) {\n      dispatch({\n        type: ActionTypes.SET_ALERT,\n        payload: {\n          isAlert: true,\n          title: \"Success\",\n          type: \"success\",\n          message: response.data.message\n        }\n      });\n    } else {\n      dispatch({\n        type: ActionTypes.SET_ALERT,\n        payload: {\n          isAlert: true,\n          title: \"Submit Error\",\n          type: \"error\",\n          message: response.data.message\n        }\n      });\n    }\n  };\n};\nexport const getAllTestAction = () => {\n  return async dispatch => {\n    await axios.get(apis.BASE + apis.GET_ALL_TEST, {\n      headers: {\n        'Authorization': `Bearer ${Auth.retriveToken()}`\n      }\n    }).then(response => {\n      if (response.data.success) {\n        dispatch({\n          type: ActionTypes.GET_ALL_TESTS,\n          payload: {\n            testlist: response.data.testlist\n          }\n        });\n      }\n    });\n  };\n};\nexport const getTestDetailsFromId = details => {\n  return async dispatch => {\n    const response = await axios.post(apis.BASE + apis.GET_TEST_DETAILS_BY_ID, details, {\n      headers: {\n        'Authorization': `Bearer ${Auth.retriveToken()}`\n      }\n    });\n\n    if (response.data.success) {\n      dispatch({\n        type: ActionTypes.GET_TEST_DETAILS_TEACHER,\n        payload: {\n          test: response.data.test\n        }\n      });\n    } else {\n      dispatch({\n        type: ActionTypes.SET_ALERT,\n        payload: {\n          isAlert: true,\n          title: \"Could not get test details\",\n          type: \"error\",\n          message: response.data.message\n        }\n      });\n    }\n  };\n};\nexport const goBackToAllTest = () => {\n  return dispatch => {\n    dispatch({\n      type: ActionTypes.Go_BACK_ALL_TEST_TEACHER,\n      payload: ''\n    });\n  };\n};","map":{"version":3,"names":["axios","apis","ActionTypes","Auth","createTestAction","details","dispatch","response","post","BASE","CREATE_QUESTION","headers","retriveToken","data","success","type","SET_ALERT","payload","isAlert","title","message","getAllTestAction","get","GET_ALL_TEST","then","GET_ALL_TESTS","testlist","getTestDetailsFromId","GET_TEST_DETAILS_BY_ID","GET_TEST_DETAILS_TEACHER","test","goBackToAllTest","Go_BACK_ALL_TEST_TEACHER"],"sources":["D:/Quiz/user-portal-frontend/src/redux/actions/teacherTestAction.js"],"sourcesContent":["import axios from \"axios\"\nimport apis from \"../../helper/Apis\"\nimport { ActionTypes } from \"../action-types\";\nimport Auth from \"../../helper/Auth\"\n\nexport const createTestAction = (details) => {\n  return async(dispatch)=> {\n    const response = await axios.post(apis.BASE + apis.CREATE_QUESTION, details, {\n      headers:{\n        'Authorization':`Bearer ${Auth.retriveToken()}`\n      }\n    })\n    if(response.data.success) {\n      dispatch({\n        type:ActionTypes.SET_ALERT,\n        payload : {\n          isAlert : true,\n          title : \"Success\",\n          type : \"success\",\n          message : response.data.message\n        }\n      })\n    }\n    else {\n      dispatch({\n        type:ActionTypes.SET_ALERT,\n        payload : {\n          isAlert : true,\n          title : \"Submit Error\",\n          type : \"error\",\n          message : response.data.message\n        }\n      })\n    }\n  }\n}\n\nexport const getAllTestAction = () => {\n  return async(dispatch)=> {\n    await axios.get(apis.BASE + apis.GET_ALL_TEST, {\n      headers : {\n        'Authorization':`Bearer ${Auth.retriveToken()}`\n      }\n    }).then(response => {\n      if(response.data.success) {\n        dispatch({\n          type: ActionTypes.GET_ALL_TESTS,\n          payload : {\n            testlist : response.data.testlist\n          }\n        })\n      }\n    })\n  }\n}\n\nexport const getTestDetailsFromId = (details) => {\n  return async(dispatch) => {\n    const response = await axios.post(apis.BASE+ apis.GET_TEST_DETAILS_BY_ID,details,{\n      headers:{\n        'Authorization':`Bearer ${Auth.retriveToken()}`\n      }\n    })\n    if(response.data.success) {\n      dispatch({\n        type:ActionTypes.GET_TEST_DETAILS_TEACHER,\n        payload : {\n          test : response.data.test\n        }\n      })\n    } else {\n      dispatch({\n        type:ActionTypes.SET_ALERT,\n        payload : {\n          isAlert : true,\n          title : \"Could not get test details\",\n          type : \"error\",\n          message : response.data.message\n        }\n      })\n    }\n  }\n}\n\nexport const goBackToAllTest = () => {\n  return (dispatch) => {\n    dispatch({\n      type: ActionTypes.Go_BACK_ALL_TEST_TEACHER,\n      payload : ''\n    })\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}