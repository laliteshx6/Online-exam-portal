{"ast":null,"code":"var _jsxFileName = \"D:\\\\Quiz\\\\user\\\\src\\\\components\\\\molecues\\\\QuestionsTable\\\\QuestionTable.js\";\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { TableBody, TableCell, TableRow, Table, TableHead, TableContainer, Paper, Button } from \"@material-ui/core\";\nimport { changeQuestionStatus, searchQuestionById } from \"../../../redux/actions/questionAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useStyles = theme => ({\n  tableBorder: {\n    background: '#e7e7e7',\n    padding: '15px'\n  },\n  tableHeader: {\n    background: '#3f51b5',\n    color: 'white'\n  }\n});\n\nclass QuestionTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.viewQuestion = id => {\n      this.props.searchQuestionById(id);\n    };\n\n    this.onQuestionStatusChange = (event, id, status) => {\n      this.props.changeQuestionStatus({\n        id,\n        status: !status\n      });\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.props.classes.tableBorder,\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        className: this.props.classes.table,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                className: this.props.classes.tableHeader,\n                children: \"No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                className: this.props.classes.tableHeader,\n                children: \"Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: this.props.classes.tableHeader,\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: this.props.classes.tableHeader,\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: this.props.questionlist.map((question, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                onClick: event => this.viewQuestion(question._id),\n                children: question.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: question.status === true ? {\n                  color: 'green'\n                } : {\n                  color: 'red'\n                },\n                children: question.status === true ? 'Active' : 'Blocked'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: event => this.onQuestionStatusChange(event, question._id, question.status),\n                  style: question.status === false ? {\n                    background: '#00ff0088'\n                  } : {\n                    background: '#ff0000aa'\n                  },\n                  children: question.status === true ? 'block' : 'unblock'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStatetoProps = state => ({\n  questionlist: state.questionDetails.list\n});\n\nexport default withStyles(useStyles)(connect(mapStatetoProps, {\n  changeQuestionStatus,\n  searchQuestionById\n})(QuestionTable));","map":{"version":3,"names":["React","withStyles","connect","TableBody","TableCell","TableRow","Table","TableHead","TableContainer","Paper","Button","changeQuestionStatus","searchQuestionById","useStyles","theme","tableBorder","background","padding","tableHeader","color","QuestionTable","Component","constructor","props","viewQuestion","id","onQuestionStatusChange","event","status","state","render","classes","table","minWidth","questionlist","map","question","index","_id","body","mapStatetoProps","questionDetails","list"],"sources":["D:/Quiz/user/src/components/molecues/QuestionsTable/QuestionTable.js"],"sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { TableBody, TableCell, TableRow, Table, TableHead, TableContainer, Paper, Button } from \"@material-ui/core\";\nimport { changeQuestionStatus, searchQuestionById } from \"../../../redux/actions/questionAction\";\n\nconst useStyles = (theme)=> ({\n  tableBorder:{\n    background:'#e7e7e7',\n    padding:'15px'\n  },\n  tableHeader:{\n    background:'#3f51b5',\n    color:'white'\n  }\n})\n\n\n\nclass QuestionTable extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {}\n  }\n\n  viewQuestion = (id) => {\n    this.props.searchQuestionById(id);\n  }\n\n  onQuestionStatusChange = (event,id,status) => {\n    this.props.changeQuestionStatus({id,status:(!status)});\n  }\n\n  render() {\n    \n    return(\n      <div className={this.props.classes.tableBorder}>\n      <TableContainer component={Paper} className={this.props.classes.table}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead >\n            <TableRow>\n              <TableCell className={this.props.classes.tableHeader}>No.</TableCell>\n              <TableCell align=\"left\" className={this.props.classes.tableHeader}>Question</TableCell>\n              <TableCell className={this.props.classes.tableHeader}>Status</TableCell>\n              <TableCell className={this.props.classes.tableHeader}>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.props.questionlist.map((question,index)=>(\n              <TableRow key={index}>\n                <TableCell>{index+1}</TableCell>\n                <TableCell onClick={(event)=>(this.viewQuestion(question._id))}>{question.body}</TableCell>\n                <TableCell \n                  style={(question.status===true)?{color:'green'}:{color:'red'}}\n                >\n                  {(question.status===true)?'Active':'Blocked'}\n                </TableCell>\n                <TableCell> \n                  <Button \n                    onClick={(event)=>(this.onQuestionStatusChange(event,question._id,question.status))}\n                    style={(question.status===false)?{background:'#00ff0088'}:{background:'#ff0000aa'}}\n                  >\n                      {(question.status===true)?'block':'unblock'}\n                  </Button> \n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        \n      </TableContainer>\n      </div>\n    )\n  }\n}\n\nconst mapStatetoProps = state => ({\n  questionlist : state.questionDetails.list\n})\n\nexport default withStyles(useStyles)(connect(mapStatetoProps,{\n  changeQuestionStatus,\n  searchQuestionById\n})(QuestionTable));"],"mappings":"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"},"metadata":{},"sourceType":"module"}